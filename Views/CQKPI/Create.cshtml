@model ContactQuality.Models.CQKPI

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutParameters.cshtml";
}

<h4>Create</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.RadioBtnID)
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CQGKPIID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CQGKPIID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CQGKPIID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CQKPIName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CQKPIName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CQKPIName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CQKPIType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 radio">
                <label>
                    @Html.RadioButtonFor(model => model.CQKPIType, "Foundation", new { @type = "radio" }) Foundation <br />
                    @Html.RadioButtonFor(model => model.CQKPIType, "Finesse   ", new { @type = "radio" }) Finesse
                </label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CQKPIMaxGrade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CQKPIMaxGrade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CQKPIMaxGrade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-lg-offset-2 col-md-10">
            <table class="table-condensed" border="1" style="font-size:smaller">
                <tr>
                    <th colspan="3" style="background-color:lightgray">Applied Channels and Weights</th>
                </tr>
                <tr style="background-color:lightgrey">
                    <th>Channel</th>
                    <th>In Weight</th>
                    <th>Out Weight</th>
                </tr>
                @foreach (var channel in (List<ContactQuality.Models.CQKPIChannel>)@ViewBag.CQKPIChannels)
                {
                    @Html.HiddenFor(model => channel.CQCID)
                    <tr>
                        <td>
                            @Html.CheckBoxFor(model => channel.Assigned)
                            @Html.DisplayFor(model => channel.ChannelName)
                        </td>
                        <td>@Html.EditorFor(model => channel.InWgt)</td>
                        <td>@Html.EditorFor(model => channel.OutWgt)</td>
                    </tr>
                }
            </table>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Voice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Voice)
                    @Html.ValidationMessageFor(model => model.Voice, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Email)
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Video, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Video)
                    @Html.ValidationMessageFor(model => model.Video, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Chat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Chat)
                    @Html.ValidationMessageFor(model => model.Chat, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                &nbsp;&nbsp;
                @Html.ActionLink("Back ", "Index")
            </div>
        </div>
    </div>
}
